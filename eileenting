## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function

# The function has takes in a square matrix and have the ability to either
# set value of matrix, get value of matrix, set value of inverse, get value of inverse

makeCacheMatrix <- function(x = matrix()) {	
	inv <- NULL
	set <- function (y) {
		x <<- y
		inv <<- NULL
	}
	get <- function () x 
	setinv <- function (solve) inv <<- solve
	getinv <- function () inv
	list (set = set, get = get, setinv = setinv, getinv = getinv)
}


## Write a short comment describing this function

cacheSolve <- function(x) {
      ## Return a matrix that is the inverse of 'x'
	inv <- x$getinv()
#check if the inverse already existed in cache
#if yes, output the message then output the inverse 
	if (!is.null(inv)){
		message("getting cached data")
		return (inv)
	}
#if inverse had not existed
#function tries to solve the inverse for matrix and then cache it
	data <- x$get()
	inv <- solve(data)
	x$setinv(inv)
	inv

}
